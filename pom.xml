<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.dubenets.projects</groupId>
	<artifactId>projectagent</artifactId>
	<version>${project.build.version}</version>
	<packaging>pom</packaging>
	<description>Application - mediator between project owner and performers</description>

	<modules>
		<module>projectagentDomain</module>
		<module>projectagentDAO</module>
		<module>projectagentService</module>
		<module>projectagentWeb</module>
		<module>projectagentEAR</module>
	</modules>

	<properties>
		<project.build.version>1.0.0-SNAPSHOT</project.build.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.jdkVersion>1.6</project.build.jdkVersion>
		<projectagent.contextRoot>projectagent</projectagent.contextRoot>
		<projectagent.host>localhost</projectagent.host>
		<projectagent.port>8080</projectagent.port>

		<!-- Liquibase settings -->
		<liquibase.driver>org.postgresql.Driver</liquibase.driver>
		<liquibase.url>jdbc:postgresql://localhost/ProjectAgent</liquibase.url>
		<liquibase.username>postgres</liquibase.username>
		<liquibase.password>ADMINadmin123</liquibase.password>

		<!-- Versions of plugins -->
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<jboss.as.maven.plugin.version>7.4.Final</jboss.as.maven.plugin.version>
		<jaxws.maven.plugin.version>1.12</jaxws.maven.plugin.version>
		<liquibase.maven.plugin.version>2.0.5</liquibase.maven.plugin.version>
		<cobertura.maven.plugin.version>2.4</cobertura.maven.plugin.version>
		<maven.checkstyle.plugin.version>2.8</maven.checkstyle.plugin.version>
		<maven.surefire.plugin.version>2.4.3</maven.surefire.plugin.version>
		<maven.ejb.plugin.version>2.3</maven.ejb.plugin.version>
		<sonar.maven.plugin.version>3.5.1</sonar.maven.plugin.version>
		<maven.war.plugin.version>2.3</maven.war.plugin.version>

		<!-- Dependencies versions -->
		<jboss.bom.version>1.0.6.Final</jboss.bom.version>
		<hibernate.validator.version>5.0.1.Final</hibernate.validator.version>
		<hibernate.jpamodelgen.version>1.2.0.Final</hibernate.jpamodelgen.version>
		<postgresql.version>9.1-901.jdbc4</postgresql.version>
		<javax.mail.version>1.4.7</javax.mail.version>
		<spring.security.version>3.1.4.RELEASE</spring.security.version>
		<spring.faces.version>2.3.2.RELEASE</spring.faces.version>
		<jackson.mapper.asl.version>1.9.12</jackson.mapper.asl.version>
		<jboss.logging.version>3.1.0.GA</jboss.logging.version>
		<lombok.version>0.11.8</lombok.version>
		<junit.version>4.11</junit.version>
		<mockito.all.version>1.9.5</mockito.all.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>projectagentDomain</artifactId>
				<version>${project.build.version}</version>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>projectagentDAO</artifactId>
				<version>${project.build.version}</version>
				<type>ejb</type>
			</dependency>

			<!-- <type>war</type> ???? -->
			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>projectagentService</artifactId>
				<version>${project.build.version}</version>
				<type>ejb</type>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>projectagentWeb</artifactId>
				<version>${project.build.version}</version>
				<type>war</type>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>${project.groupId}</groupId>
				<artifactId>projectagentEAR</artifactId>
				<version>${project.build.version}</version>
				<type>ear</type>
			</dependency>

			<!-- JBoss distributes a complete set of Java EE 6 APIs including a Bill 
				of Materials (BOM). A BOM specifies the versions of a "stack" (or a collection) 
				of artifacts. We use this here so that we always get the correct versions 
				of artifacts. Here we use the jboss-javaee-6.0-with-hibernate stack you can 
				read this as the JBoss stack of the Java EE 6 APIs, with extras from the 
				Hibernate family of projects) -->

			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-hibernate</artifactId>
				<version>${jboss.bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- JSR-303 (Bean Validation) Implementation -->
			<!-- Provides portable constraints such as @Email -->
			<!-- Hibernate Validator is shipped in JBoss AS 7 -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
				<scope>provided</scope>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Hibernate metamodel generator for Criteria usage -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-jpamodelgen</artifactId>
				<version>${hibernate.jpamodelgen.version}</version>
			</dependency>

			<dependency>
				<groupId>postgresql</groupId>
				<artifactId>postgresql</artifactId>
				<version>${postgresql.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.mapper.asl.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>${jboss.logging.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Getters and setters, hashCode and equals, and other autogenerator -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- Spring Security dependencies -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-web</artifactId>
				<version>${spring.security.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-config</artifactId>
				<version>${spring.security.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.webflow</groupId>
				<artifactId>spring-faces</artifactId>
				<version>${spring.faces.version}</version>
			</dependency>

			<!-- Test dependencies -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.all.version}</version>
				<type>jar</type>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
	</dependencies>

	<build>
		<sourceDirectory>target/generated-sources/annotations</sourceDirectory>
		<testSourceDirectory>target/generated-sources/test-annotations</testSourceDirectory>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
					<configuration>
						<compilerVersion>${project.build.jdkVersion}</compilerVersion>
						<source>${project.build.jdkVersion}</source>
						<target>${project.build.jdkVersion}</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase.maven.plugin.version}</version>
					<configuration>
						<skip>true</skip>
						<promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-ejb-plugin</artifactId>
					<version>${maven.ejb.plugin.version}</version>
					<configuration>
						<!-- Tell Maven we are using EJB 3.1 -->
						<ejbVersion>3.1</ejbVersion>
						<source>${project.build.jdkVersion}</source>
						<target>${project.build.jdkVersion}</target>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
						</archive>
					</configuration>
				</plugin>

				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven.war.plugin.version}</version>
					<!-- <configuration> <failOnMissingWebXml>false</failOnMissingWebXml> 
						</configuration> -->
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>jaxws-maven-plugin</artifactId>
					<version>${jaxws.maven.plugin.version}</version>
				</plugin>

				<!-- Cobertura plugin -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>${cobertura.maven.plugin.version}</version>
					<configuration>
						<formats>
							<format>xml</format>
							<format>html</format>
						</formats>
						<outputDirectory>target/site/cobertura</outputDirectory>
					</configuration>
				</plugin>

				<!-- Findbugs plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<configuration>
						<goal>site</goal>
						<reportPlugins>
							<plugin>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>findbugs-maven-plugin</artifactId>
							</plugin>
						</reportPlugins>
						<outputDirectory>target/site/findbugs</outputDirectory>
					</configuration>
				</plugin>

				<!-- Checkstyle plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven.checkstyle.plugin.version}</version>
					<configuration>
						<consoleOutput>true</consoleOutput>
						<outputDirectory>target/site/checkstyle</outputDirectory>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar.maven.plugin.version}</version>
					<goals>
						<goal>sonar</goal>
					</goals>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven.surefire.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>

			<plugin>
				<artifactId>maven-checkstyle-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>0.11.8.0</version>
				<executions>
					<execution>
						<id>delombok</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<addOutputDirectory>false</addOutputDirectory>
							<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
							<outputDirectory>${project.build.directory}/generated-sources/annotations</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>test-delombok</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>testDelombok</goal>
						</goals>
						<configuration>
							<addOutputDirectory>false</addOutputDirectory>
							<sourceDirectory>${project.basedir}/src/test/java</sourceDirectory>
							<outputDirectory>${project.build.directory}/generated-sources/test-annotations</outputDirectory>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>sun.jdk</groupId>
						<artifactId>tools</artifactId>
						<version>1.6</version>
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jboss.as.plugins</groupId>
							<artifactId>jboss-as-maven-plugin</artifactId>
							<version>${jboss.as.maven.plugin.version}</version>
							<inherited>true</inherited>
							<configuration>
								<hostname>localhost</hostname>
								<port>9999</port>
								<skip>true</skip>
								<ignoreMissingDeployment>true</ignoreMissingDeployment>
								<domain>
									<server-groups>
										<server-group>main-server-group</server-group>
									</server-groups>
									<profiles>
										<profile>default</profile>
										<profile>full</profile>
										<profile>ha</profile>
										<profile>full-ha</profile>
									</profiles>
								</domain>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>

		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.jboss.as.plugins</groupId>
							<artifactId>jboss-as-maven-plugin</artifactId>
							<version>${jboss.as.maven.plugin.version}</version>
							<inherited>true</inherited>
							<configuration>
								<hostname>localhost</hostname>
								<port>9999</port>
								<skip>true</skip>
								<ignoreMissingDeployment>true</ignoreMissingDeployment>
								<domain>
									<server-groups>
										<server-group>main-server-group</server-group>
									</server-groups>
									<profiles>
										<profile>default</profile>
										<profile>full</profile>
										<profile>ha</profile>
										<profile>full-ha</profile>
									</profiles>
								</domain>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>
</project>